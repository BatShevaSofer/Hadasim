// <auto-generated />
using System;
using HMO.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HMO.Context.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HMO.Repository.Entities.Vaccination", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("date_vaccination")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Vaccination");
                });

            modelBuilder.Entity("HMO.Repository.PersonalDetailes", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Vaccinationid")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("end_ill")
                        .HasColumnType("datetime2");

                    b.Property<int>("house_number")
                        .HasColumnType("int");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pelephon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("start_ill")
                        .HasColumnType("datetime2");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vaccination_number")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Vaccinationid");

                    b.ToTable("PersonalDetailes");
                });

            modelBuilder.Entity("HMO.Repository.Producer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Vaccinationid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Vaccinationid");

                    b.ToTable("Producer");
                });

            modelBuilder.Entity("HMO.Repository.PersonalDetailes", b =>
                {
                    b.HasOne("HMO.Repository.Entities.Vaccination", null)
                        .WithMany("identity")
                        .HasForeignKey("Vaccinationid");
                });

            modelBuilder.Entity("HMO.Repository.Producer", b =>
                {
                    b.HasOne("HMO.Repository.Entities.Vaccination", null)
                        .WithMany("producer")
                        .HasForeignKey("Vaccinationid");
                });

            modelBuilder.Entity("HMO.Repository.Entities.Vaccination", b =>
                {
                    b.Navigation("identity");

                    b.Navigation("producer");
                });
#pragma warning restore 612, 618
        }
    }
}
